
Train Epoch: 1 [20/1592 (1.19%)]	Loss: 0.0435	mIoU: 0.0136%	Acc: 83.7367%	Precision: 0.0136%	Recall: 16.7952%	
Traceback (most recent call last):
  File "train.py", line 213, in <module>
    train(args)
  File "train.py", line 108, in train
    logits = model(data) # Model forward
  File "/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/Code/Code/model.py", line 272, in forward
    layer_outputs = self.mit(x, return_layer_outputs=True)
  File "/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/Code/Code/model.py", line 225, in forward
    x = attn(x) + x
  File "/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/Code/Code/model.py", line 75, in forward
    return self.fn(self.norm(x))
  File "/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/Code/Code/model.py", line 65, in forward
    return (x - mean) / (std + self.eps) * self.g + self.b
KeyboardInterrupt