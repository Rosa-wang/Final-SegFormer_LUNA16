> /root/Code/Code/model.py(223)forward()
-> x = rearrange(x, 'b c (d h w) -> b c d h w')
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/einops/einops.py", line 411, in reduce
    recipe = _prepare_transformation_recipe(pattern, reduction, axes_lengths=hashable_axes_lengths)
  File "/root/miniconda3/lib/python3.8/site-packages/einops/einops.py", line 319, in _prepare_transformation_recipe
    raise EinopsError('Could not infer sizes for {}'.format(unknown))
einops.EinopsError: Could not infer sizes for {'d', 'w', 'h'}
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "train.py", line 214, in <module>
    train(args)
  File "train.py", line 109, in train
    logits = model(data) # Model forward
  File "/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/Code/Code/model.py", line 274, in forward
    layer_outputs = self.mit(x, return_layer_outputs=True)
  File "/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/Code/Code/model.py", line 223, in forward
    x = rearrange(x, 'b c (d h w) -> b c d h w')
  File "/root/miniconda3/lib/python3.8/site-packages/einops/einops.py", line 483, in rearrange
    return reduce(cast(Tensor, tensor), pattern, reduction='rearrange', **axes_lengths)
  File "/root/miniconda3/lib/python3.8/site-packages/einops/einops.py", line 420, in reduce
    raise EinopsError(message + '\n {}'.format(e))
einops.EinopsError:  Error while processing rearrange-reduction pattern "b c (d h w) -> b c d h w".
 Input tensor shape: torch.Size([1, 125, 79507]). Additional info: {}.
 Could not infer sizes for {'d', 'w', 'h'}