> /root/Code/Code/dataset.py(38)__getitem__()
-> dist_vec = indices - np.array(place).transpose(2,0,1)
array([[[[  0,   0,   0],
         [  0,   0,   1],
         [  0,   0,   2],
         ...,
         [  0,   0, 125],
         [  0,   0, 126],
         [  0,   0, 127]],
        [[  0,   1,   0],
         [  0,   1,   1],
         [  0,   1,   2],
         ...,
         [  0,   1, 125],
         [  0,   1, 126],
         [  0,   1, 127]],
        [[  0,   2,   0],
         [  0,   2,   1],
         [  0,   2,   2],
         ...,
         [  0,   2, 125],
         [  0,   2, 126],
         [  0,   2, 127]],
        ...,
        [[  0, 125,   0],
         [  0, 125,   1],
         [  0, 125,   2],
         ...,
         [  0, 125, 125],
         [  0, 125, 126],
         [  0, 125, 127]],
        [[  0, 126,   0],
         [  0, 126,   1],
         [  0, 126,   2],
         ...,
         [  0, 126, 125],
         [  0, 126, 126],
         [  0, 126, 127]],
        [[  0, 127,   0],
         [  0, 127,   1],
         [  0, 127,   2],
         ...,
         [  0, 127, 125],
         [  0, 127, 126],
         [  0, 127, 127]]],
       [[[  1,   0,   0],
         [  1,   0,   1],
         [  1,   0,   2],
         ...,
         [  1,   0, 125],
         [  1,   0, 126],
         [  1,   0, 127]],
        [[  1,   1,   0],
         [  1,   1,   1],
         [  1,   1,   2],
         ...,
         [  1,   1, 125],
         [  1,   1, 126],
         [  1,   1, 127]],
        [[  1,   2,   0],
         [  1,   2,   1],
         [  1,   2,   2],
         ...,
         [  1,   2, 125],
         [  1,   2, 126],
         [  1,   2, 127]],
        ...,
        [[  1, 125,   0],
         [  1, 125,   1],
         [  1, 125,   2],
         ...,
         [  1, 125, 125],
         [  1, 125, 126],
         [  1, 125, 127]],
        [[  1, 126,   0],
         [  1, 126,   1],
         [  1, 126,   2],
         ...,
         [  1, 126, 125],
         [  1, 126, 126],
         [  1, 126, 127]],
        [[  1, 127,   0],
         [  1, 127,   1],
         [  1, 127,   2],
         ...,
         [  1, 127, 125],
         [  1, 127, 126],
         [  1, 127, 127]]],
       [[[  2,   0,   0],
         [  2,   0,   1],
         [  2,   0,   2],
         ...,
         [  2,   0, 125],
         [  2,   0, 126],
         [  2,   0, 127]],
        [[  2,   1,   0],
         [  2,   1,   1],
         [  2,   1,   2],
         ...,
         [  2,   1, 125],
         [  2,   1, 126],
         [  2,   1, 127]],
        [[  2,   2,   0],
         [  2,   2,   1],
         [  2,   2,   2],
         ...,
         [  2,   2, 125],
         [  2,   2, 126],
         [  2,   2, 127]],
        ...,
        [[  2, 125,   0],
         [  2, 125,   1],
         [  2, 125,   2],
         ...,
         [  2, 125, 125],
         [  2, 125, 126],
         [  2, 125, 127]],
        [[  2, 126,   0],
         [  2, 126,   1],
         [  2, 126,   2],
         ...,
         [  2, 126, 125],
         [  2, 126, 126],
         [  2, 126, 127]],
        [[  2, 127,   0],
         [  2, 127,   1],
         [  2, 127,   2],
         ...,
         [  2, 127, 125],
         [  2, 127, 126],
         [  2, 127, 127]]],
       ...,
       [[[125,   0,   0],
         [125,   0,   1],
         [125,   0,   2],
         ...,
         [125,   0, 125],
         [125,   0, 126],
         [125,   0, 127]],
        [[125,   1,   0],
         [125,   1,   1],
         [125,   1,   2],
         ...,
         [125,   1, 125],
         [125,   1, 126],
         [125,   1, 127]],
        [[125,   2,   0],
         [125,   2,   1],
         [125,   2,   2],
         ...,
         [125,   2, 125],
         [125,   2, 126],
         [125,   2, 127]],
        ...,
        [[125, 125,   0],
         [125, 125,   1],
         [125, 125,   2],
         ...,
         [125, 125, 125],
         [125, 125, 126],
         [125, 125, 127]],
        [[125, 126,   0],
         [125, 126,   1],
         [125, 126,   2],
         ...,
         [125, 126, 125],
         [125, 126, 126],
         [125, 126, 127]],
        [[125, 127,   0],
         [125, 127,   1],
         [125, 127,   2],
         ...,
         [125, 127, 125],
         [125, 127, 126],
         [125, 127, 127]]],
       [[[126,   0,   0],
         [126,   0,   1],
         [126,   0,   2],
         ...,
         [126,   0, 125],
         [126,   0, 126],
         [126,   0, 127]],
        [[126,   1,   0],
         [126,   1,   1],
         [126,   1,   2],
         ...,
         [126,   1, 125],
         [126,   1, 126],
         [126,   1, 127]],
        [[126,   2,   0],
         [126,   2,   1],
         [126,   2,   2],
         ...,
         [126,   2, 125],
         [126,   2, 126],
         [126,   2, 127]],
        ...,
        [[126, 125,   0],
         [126, 125,   1],
         [126, 125,   2],
         ...,
         [126, 125, 125],
         [126, 125, 126],
         [126, 125, 127]],
        [[126, 126,   0],
         [126, 126,   1],
         [126, 126,   2],
         ...,
         [126, 126, 125],
         [126, 126, 126],
         [126, 126, 127]],
        [[126, 127,   0],
         [126, 127,   1],
         [126, 127,   2],
         ...,
         [126, 127, 125],
         [126, 127, 126],
         [126, 127, 127]]],
       [[[127,   0,   0],
         [127,   0,   1],
         [127,   0,   2],
         ...,
         [127,   0, 125],
         [127,   0, 126],
         [127,   0, 127]],
        [[127,   1,   0],
         [127,   1,   1],
         [127,   1,   2],
         ...,
         [127,   1, 125],
         [127,   1, 126],
         [127,   1, 127]],
        [[127,   2,   0],
         [127,   2,   1],
         [127,   2,   2],
         ...,
         [127,   2, 125],
         [127,   2, 126],
         [127,   2, 127]],
        ...,
        [[127, 125,   0],
         [127, 125,   1],
         [127, 125,   2],
         ...,
         [127, 125, 125],
         [127, 125, 126],
         [127, 125, 127]],
        [[127, 126,   0],
         [127, 126,   1],
         [127, 126,   2],
         ...,
         [127, 126, 125],
         [127, 126, 126],
         [127, 126, 127]],
        [[127, 127,   0],
         [127, 127,   1],
         [127, 127,   2],
         ...,
         [127, 127, 125],
         [127, 127, 126],
         [127, 127, 127]]]])
(128, 128, 128, 3)
(128, 128, 128)
(3,)
array([105,  33,  58])
array([ 58, 105,  33])
Traceback (most recent call last):
  File "train.py", line 214, in <module>
    train(args)
  File "train.py", line 100, in train
    for batch_idx, (data, target) in enumerate(train_loader):
  File "/root/miniconda3/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 530, in __next__
    data = self._next_data()
  File "/root/miniconda3/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 570, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/root/miniconda3/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 49, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/root/miniconda3/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 49, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/root/Code/Code/dataset.py", line 38, in __getitem__
    dist_vec = indices - np.array(place).transpose(2,0,1)
  File "/root/Code/Code/dataset.py", line 38, in __getitem__
    dist_vec = indices - np.array(place).transpose(2,0,1)
  File "/root/miniconda3/lib/python3.8/bdb.py", line 88, in trace_dispatch
    return self.dispatch_line(frame)
  File "/root/miniconda3/lib/python3.8/bdb.py", line 113, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit